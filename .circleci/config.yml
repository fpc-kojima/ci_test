# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # - image: circleci/php:7.1.5-browsers
      - image: notnoopci/php:7.1.5-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_USER=root
          - MYSQL_PASSWORD=
          - MYSQL_ALLOW_EMPTY_PASSWORD=yes
          - MYSQL_DATABASE=circle_test
          - MYSQL_HOST=127.0.0.1
          - MYSQL_ROOT_HOST=%

    # working_directory: ~/repo
    working_directory: ~/laravel

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: composer install -n --prefer-dist

      # Debug Composer Require
      - run: composer require nesbot/carbon
      - run: composer require fzaninotto/faker
      - run: composer require guzzlehttp/guzzle
      - run: composer require aws/aws-sdk-php
      - run: composer require google/apiclient
      - run: composer require sendgrid/sendgrid
      - run: composer require laravelcollective/html

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      - run: cd /home/circleci/laravel
      - run: php artisan config:clear
      - run: php artisan key:generate
      - run: ./vendor/bin/phpunit
  test:
    docker:
      - image: notnoopci/php:7.1.5-browsers
    steps:
      - checkout
      - run: echo test
      - run: cd /home/circleci/laravel
      - run: php artisan config:clear
      - run: php artisan key:generate
      - run: ./vendor/bin/phpunit
  deploy:
    machine: True
    steps:
      - run: echo deploy
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master

